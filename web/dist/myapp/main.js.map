{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/card/card.component.html","webpack:///./src/app/card/card.component.scss","webpack:///./src/app/card/card.component.ts","webpack:///./src/app/config-service/config-service.component.html","webpack:///./src/app/config-service/config-service.component.scss","webpack:///./src/app/config-service/config-service.component.ts","webpack:///./src/app/configform/configform.component.html","webpack:///./src/app/configform/configform.component.scss","webpack:///./src/app/configform/configform.component.ts","webpack:///./src/app/health/health.component.html","webpack:///./src/app/health/health.component.scss","webpack:///./src/app/health/health.component.ts","webpack:///./src/app/httpclient.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {HealthComponent} from './health/health.component';\nimport {ConfigServiceComponent} from './config-service/config-service.component';\n\nconst routes: Routes = [\n\n  {\n    path: '',\n    component: ConfigServiceComponent\n  },\n  {\n    path: 'health',\n    component: HealthComponent\n  }\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n\\n<header>\\n  <a routerLink=\\\"/\\\">Config</a>\\n\\n  <a routerLink=\\\"/health\\\">Health</a>\\n</header>\\n\\n<router-outlet></router-outlet>\\n\"","module.exports = \"header {\\n  background: #293e40;\\n  height: 4rem;\\n  color: white;\\n  padding: 1rem;\\n  line-height: 3rem; }\\n  header a {\\n    padding: 1rem;\\n    color: white;\\n    text-decoration: none; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zdWJyYW1hbnlhLmdhbmVzaC9Eb2N1bWVudHMvUGFyZW50L3dlYi9zcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUVFLG1CQUFtQjtFQUVuQixZQUFXO0VBQ1gsWUFBVztFQUNYLGFBQVk7RUFDWixpQkFBZ0IsRUFBQTtFQVBsQjtJQVVJLGFBQVk7SUFDWixZQUFXO0lBQ1gscUJBQW9CLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcbmhlYWRlcntcblxuICBiYWNrZ3JvdW5kOiAjMjkzZTQwO1xuXG4gIGhlaWdodDo0cmVtO1xuICBjb2xvcjp3aGl0ZTtcbiAgcGFkZGluZzoxcmVtO1xuICBsaW5lLWhlaWdodDozcmVtO1xuXG4gIGF7XG4gICAgcGFkZGluZzoxcmVtO1xuICAgIGNvbG9yOndoaXRlO1xuICAgIHRleHQtZGVjb3JhdGlvbjpub25lO1xuICB9XG5cbn1cbiJdfQ== */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'myapp';\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {HealthComponent} from './health/health.component';\n// is what we write\nimport {HttpClientModule} from '@angular/common/http';\nimport {ConfigServiceComponent} from './config-service/config-service.component';\nimport {CardComponent} from './card/card.component';\nimport {ConfigformComponent} from './configform/configform.component';\nimport {FormsModule} from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n\n    HealthComponent,\n    ConfigServiceComponent,\n    CardComponent,\n    ConfigformComponent\n\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","module.exports = \"<div class=\\\"card\\\">\\n\\n  <h1>{{data.tag}}</h1>\\n  <div> {{data.instance}}</div>\\n  <div> {{data.username}}</div>\\n  <div> {{data.id}}</div>\\n  <!--  <pre>{{data|json}}</pre>-->\\n  <hr>\\n  <!--horizontal ruler-->\\n\\n  <Button (click)=\\\"showForm=!showForm\\\" class=\\\"button primary\\\">Edit</Button>\\n\\n  <Button (click)=\\\"deleteConfig(data.id)\\\" class=\\\"button danger\\\">Delete</Button>\\n\\n  <app-configform *ngIf=\\\"showForm\\\" [id]=\\\"data.id\\\" (reload)=\\\"handleUpdate()\\\"></app-configform>\\n\\n</div>\\n\\n\\n\\n\"","module.exports = \".card {\\n  min-height: 10rem;\\n  margin: 1rem;\\n  padding: 1rem;\\n  box-shadow: 2px 2px 12px gray; }\\n\\n.button {\\n  margin: 3px;\\n  border: none;\\n  padding: .5rem;\\n  outline: none;\\n  color: white; }\\n\\n.button:hover {\\n    box-shadow: 2px 2px 10px gray; }\\n\\n.danger {\\n  background: firebrick; }\\n\\n.primary {\\n  background: steelblue; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zdWJyYW1hbnlhLmdhbmVzaC9Eb2N1bWVudHMvUGFyZW50L3dlYi9zcmMvYXBwL2NhcmQvY2FyZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUlFLGlCQUFpQjtFQUVqQixZQUFZO0VBQ1osYUFBYTtFQUViLDZCQUFrQyxFQUFBOztBQUlwQztFQUVFLFdBQVU7RUFDVixZQUFZO0VBQ1osY0FBYztFQUNkLGFBQWE7RUFDYixZQUFZLEVBQUE7O0FBTmQ7SUFTSSw2QkFBa0MsRUFBQTs7QUFLdEM7RUFDRyxxQkFBcUIsRUFBQTs7QUFHeEI7RUFDRSxxQkFBcUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2NhcmQvY2FyZC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkIHtcblxuXG4gIC8vd2lkdGg6IDEwMCU7XG4gIG1pbi1oZWlnaHQ6IDEwcmVtO1xuXG4gIG1hcmdpbjogMXJlbTtcbiAgcGFkZGluZzogMXJlbTtcblxuICBib3gtc2hhZG93OiAycHggMnB4IDEycHggcmdiYShncmF5LCA0NSk7XG5cbn1cblxuLmJ1dHRvbiB7XG5cbiAgbWFyZ2luOjNweDtcbiAgYm9yZGVyOiBub25lO1xuICBwYWRkaW5nOiAuNXJlbTtcbiAgb3V0bGluZTogbm9uZTtcbiAgY29sb3I6IHdoaXRlO1xuICAmOmhvdmVye1xuXG4gICAgYm94LXNoYWRvdzogMnB4IDJweCAxMHB4IHJnYmEoZ3JheSw0NSk7XG4gIH1cblxufVxuXG4uZGFuZ2VyIHtcbiAgIGJhY2tncm91bmQ6IGZpcmVicmljaztcbiB9XG5cbi5wcmltYXJ5IHtcbiAgYmFja2dyb3VuZDogc3RlZWxibHVlO1xufVxuIl19 */\"","import {Component, EventEmitter, Input, Output, OnInit} from '@angular/core';\nimport {HttpclientService} from '../httpclient.service';\nimport {ConfigformComponent} from '../configform/configform.component';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss']\n})\nexport class CardComponent implements OnInit {\n\n  @Input() data;\n  @Output() reload = new EventEmitter<any>();\n\n  public config;\n  showForm = false;\n\n  constructor(private http: HttpclientService) {\n  }\n\n\n  ngOnInit() {\n  }\n\n  deleteConfig(id) {\n\n    this.http.deleteSNConfig(id).subscribe(data => {\n      this.reload.emit('');\n    });\n  }\n\n  handleUpdate() {\n    this.reload.emit('');\n  }\n}\n","module.exports = \"<div>\\n  <!--<pre>{{config | json}}</pre>-->\\n  <button class=\\\"add-config\\\" (click)=\\\"showForm=!showForm\\\">\\n    Add new config\\n  </button>\\n  <app-configform *ngIf=\\\"showForm\\\" (reload)=\\\"handleRefresh()\\\"></app-configform>\\n\\n\\n\\n<!--  </div>-->\\n  <div class=\\\"config\\\">\\n    <div *ngFor=\\\"let cfg of config\\\">\\n\\n      <app-card [data]=\\\"cfg\\\" (reload)=\\\"handleRefresh()\\\"></app-card>\\n\\n\\n    </div>\\n\\n  </div>\\n\\n\\n</div>\\n\"","module.exports = \".add-config {\\n  padding: 1rem;\\n  background: tomato;\\n  width: 10rem;\\n  margin: 10px;\\n  color: white; }\\n\\n.config {\\n  display: grid;\\n  align-items: center;\\n  grid-template-columns: repeat(auto-fit, minmax(340px, 1fr)); }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zdWJyYW1hbnlhLmdhbmVzaC9Eb2N1bWVudHMvUGFyZW50L3dlYi9zcmMvYXBwL2NvbmZpZy1zZXJ2aWNlL2NvbmZpZy1zZXJ2aWNlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBRUUsYUFBWTtFQUNaLGtCQUFrQjtFQUNsQixZQUFXO0VBQ1gsWUFBVztFQUNYLFlBQVcsRUFBQTs7QUFHYjtFQUNFLGFBQVk7RUFDWixtQkFBbUI7RUFFbkIsMkRBQTJELEVBQUEiLCJmaWxlIjoic3JjL2FwcC9jb25maWctc2VydmljZS9jb25maWctc2VydmljZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hZGQtY29uZmlne1xuXG4gIHBhZGRpbmc6MXJlbTtcbiAgYmFja2dyb3VuZDogdG9tYXRvO1xuICB3aWR0aDoxMHJlbTtcbiAgbWFyZ2luOjEwcHg7XG4gIGNvbG9yOndoaXRlO1xufVxuXG4uY29uZmlne1xuICBkaXNwbGF5OmdyaWQ7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maXQsIG1pbm1heCgzNDBweCwgMWZyKSk7XG5cbn1cbiJdfQ== */\"","import {Component, OnInit} from '@angular/core';\nimport {HttpclientService} from '../httpclient.service';\n\n@Component({\n  selector: 'app-config-service',\n  templateUrl: './config-service.component.html',\n  styleUrls: ['./config-service.component.scss']\n})\nexport class ConfigServiceComponent implements OnInit {\n\n  constructor(private http: HttpclientService) {\n  }\n\n  public config;\n  showForm = false;\n\n  ngOnInit() {\n    this.getConfig();\n\n  }\n\n  getConfig() {\n\n    this.http.getSNConfig().subscribe(data => {\n\n      this.config = data;\n    });\n  }\n\n  handleRefresh() {\n    this.getConfig();\n  }\n}\n","module.exports = \"\\n\\n<div class=\\\"container\\\">\\n\\n  <h1>Add Config</h1>\\n<!--  <pre>{{data |json}}</pre>-->\\n  <form  #configForminsert=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n<!--    # is called template variable -->\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"tag\\\">Tag</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"tag\\\" required\\n             [(ngModel)]=\\\"configFormData.tag\\\" name=\\\"instance\\\" >\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"instance\\\">Instance</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"instance\\\" required\\n             [(ngModel)]=\\\"configFormData.instance\\\"name=\\\"instance\\\" >\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"user\\\">User name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"User\\\" required\\n             [(ngModel)]=\\\"configFormData.username\\\" name=\\\"instance\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"password\\\">Password</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"password\\\" required\\n             [(ngModel)]=\\\"configFormData.password\\\"name=\\\"instance\\\">\\n    </div>\\n\\n    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Submit</button>\\n\\n  </form>\\n\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbmZpZ2Zvcm0vY29uZmlnZm9ybS5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, EventEmitter, OnInit, Output, Input} from '@angular/core';\nimport * as assert from 'assert';\nimport {HttpclientService} from '../httpclient.service';\n\n@Component({\n  selector: 'app-configform',\n  templateUrl: './configform.component.html',\n  styleUrls: ['./configform.component.scss']\n})\nexport class ConfigformComponent implements OnInit {\n  @Input() id;\n  @Output() reload = new EventEmitter<any>();\n\n  configFormData = {\n    instance: '',\n    username: '',\n    password: '',\n    tag: '',\n    id: null\n\n  };\n\n\n  constructor(private postman: HttpclientService) {\n  }\n\n  ngOnInit() {\n\n    if (this.id != null) {\n      this.configFormData.id = this.id;\n\n    }\n  }\n\n  onSubmit() {\n\n    if (this.id == null) {\n\n      this.postman.insertSNConfig(this.configFormData).subscribe(resp => {\n        this.reload.emit();\n      });\n\n    } else {\n\n\n      this.postman.updateSNConfig(this.id, this.configFormData).subscribe(resp => {\n        this.reload.emit();\n      });\n    }\n\n  }\n\n\n}\n\n","module.exports = \"<div>\\n\\n\\n  <div *ngFor=\\\"let h of health\\\" class=\\\"health\\\">\\n\\n         {{h.instance}} <br>  {{h.status}}<br> {{h.name}}<br>{{h.id}}\\n      </div>\\n\\n<!--    <app-card-http>-->\\n<!--      {{h.instance}} <br>  {{h.status}}<br> {{h.name}}<br>{{h.id}}-->\\n<!--    </app-card-http>-->\\n\\n\\n  </div>\\n<!--</div>-->\\n\"","module.exports = \".health {\\n  background: #293e40;\\n  color: white;\\n  min-height: 5rem;\\n  margin: 3px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zdWJyYW1hbnlhLmdhbmVzaC9Eb2N1bWVudHMvUGFyZW50L3dlYi9zcmMvYXBwL2hlYWx0aC9oZWFsdGguY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFRSxtQkFBbUI7RUFDbkIsWUFBVztFQUNYLGdCQUFlO0VBQ2YsV0FBVyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvaGVhbHRoL2hlYWx0aC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5oZWFsdGh7XG5cbiAgYmFja2dyb3VuZDogIzI5M2U0MDtcbiAgY29sb3I6d2hpdGU7XG4gIG1pbi1oZWlnaHQ6NXJlbTtcbiAgbWFyZ2luOjNweCA7XG59XG4iXX0= */\"","import {Component, OnInit} from '@angular/core';\nimport {HttpclientService} from '../httpclient.service';\n\n@Component({\n  selector: 'app-health',\n  templateUrl: './health.component.html',\n  styleUrls: ['./health.component.scss']\n})\nexport class HealthComponent implements OnInit {\n\n  health = null;\n\n  constructor(private postman: HttpclientService) {\n  }\n\n  ngOnInit() {\n\n    this.postman.getHealth().subscribe(resp => {\n\n      this.health = resp;\n    });\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpclientService {\n\n  url = environment.baseUrl;\n\n  constructor(private http: HttpClient) {\n  }\n\n  getSNConfig() {\n\n    return this.http.get(this.url + '/config');\n\n  }\n\n  deleteSNConfig(id) {\n    return this.http.delete(this.url + '/config/' + id);\n  }\n\n  insertSNConfig(data) {\n    return this.http.post(this.url + '/config', data);\n  }\n\n  updateSNConfig(id, data) {\n    return this.http.put(this.url + '/config/' + id, data);\n  }\n\n  getHealth() {\n    return this.http.get(this.url + '/instance-health');\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n\n  baseUrl: 'http://localhost:8080'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}